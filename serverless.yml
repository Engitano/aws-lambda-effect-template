# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: aws-lambda-effect-template # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"
plugins:
  - serverless-iam-roles-per-function
custom:
  todoItemsTable: todo-items
provider:
  name: aws
  runtime: java8
# {proxy+}
package:
  artifact: target/scala-2.13/lambda.jar

functions:
  healthcheck:
    handler: lambda.healthcheck.HealthCheckHandler$Host
    events:
      - http: ANY /healthcheck/{proxy+}
  todo:
    handler: lambda.todo.ToDoHandler$Host
    environment:
      TODO_ITEMS_TABLE: ${self:custom.todoItemsTable}
    iamRoleStatementsName: to-do-lambda-role
    iamRoleStatements:
      - Effect: "Allow"        
        Action:
          - dynamodb:*        
        Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.todoItemsTable}"
    events:
      - http: ANY /todo/{proxy+}

resources: # CloudFormation template syntax
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.todoItemsTable}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: taskId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: taskId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1